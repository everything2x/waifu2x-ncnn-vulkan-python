name: release
on:
  push:
    tags:
      - "*"
env:
  APPLICATION_NAME: waifu2x-ncnn-vulkan-python
  APPNAME_SHORT: waifu2x
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      APPNAME: ${{ steps.get_appname.outputs.APPNAME }}
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: get-appname
        id: get_appname
        run: echo ::set-output name=APPNAME::${APPLICATION_NAME}
      - name: get-version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
  ubuntu:
    needs:
      - setup
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-ubuntu
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-venv libvulkan-dev swig
          pip install build
      - name: Build
        run: |
          python -m build -w .
      - name: Package
        run: |
          mkdir -p ${{ env.PACKAGENAME }}
          cp README.md LICENSE ${{ env.PACKAGENAME }}
          cp -r dist/* ${{ env.PACKAGENAME }}
          zip -9 -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGENAME }}
          path: ${{ env.PACKAGENAME }}.zip
  ubuntu-1804:
    needs:
      - setup
    runs-on: ubuntu-18.04
    env:
      PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-ubuntu-1804
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-venv libvulkan-dev swig
          pip3 install build
      - name: Build
        run: |
          python3 -m build -w .
      - name: Package
        run: |
          mkdir -p ${{ env.PACKAGENAME }}
          cp README.md LICENSE ${{ env.PACKAGENAME }}
          cp -r dist/* ${{ env.PACKAGENAME }}
          zip -9 -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGENAME }}
          path: ${{ env.PACKAGENAME }}.zip
  windows:
    needs:
      - setup
    runs-on: windows-latest
    env:
      PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-windows
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.0.3
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      - name: Install dependencies
        run: |
          pip install build
      - name: Build
        run: |
          python -m build -w .
      - name: Package
        run: |
          mkdir ${{ env.PACKAGENAME }}
          Copy-Item -Verbose -Path "README.md" -Destination "${{ env.PACKAGENAME }}"
          Copy-Item -Verbose -Path "LICENSE" -Destination "${{ env.PACKAGENAME }}"
          Copy-Item -Verbose -Recurse -Path dist\* -Destination "${{ env.PACKAGENAME }}"
          7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGENAME }}
          path: ${{ env.PACKAGENAME }}.zip
  release:
    needs:
      - setup
      - ubuntu
      - ubuntu-1804
      - windows
    runs-on: ubuntu-latest
    steps:
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: create-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.setup.outputs.VERSION }}
          release_name: Release ${{ needs.setup.outputs.VERSION }}
          draft: true
          prerelease: false
      - name: upload-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-ubuntu
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ env.PACKAGENAME }}/${{ env.PACKAGENAME }}.zip
          asset_name: ${{ env.PACKAGENAME }}.zip
          asset_content_type: application/zip
      - name: upload-ubuntu-1804
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-ubuntu-1804
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ env.PACKAGENAME }}/${{ env.PACKAGENAME }}.zip
          asset_name: ${{ env.PACKAGENAME }}.zip
          asset_content_type: application/zip
      - name: upload-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGENAME: ${{ needs.setup.outputs.APPNAME }}-${{ needs.setup.outputs.VERSION }}-windows
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ env.PACKAGENAME }}/${{ env.PACKAGENAME }}.zip
          asset_name: ${{ env.PACKAGENAME }}.zip
          asset_content_type: application/zip
